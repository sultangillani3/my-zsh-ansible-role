- name: Install brew packages
  homebrew:
    name: [
      'zsh',
      'git',
      'wget',
      'bat',
      'exa',
      'nvm',
      'docker',
      'ctop',
      'htop',
      'tldr',
      'fzf'
    ]
    state: present
  # brew don't work from root user on macOS
  become_user: "{{ zsh_user }}"
  when: ansible_os_family == 'Darwin'

- name: Install Debian apt modules
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - fonts-powerline
    - zsh
    - git
    - wget
    - curl
  become: yes
  ignore_errors: yes
  when: ansible_os_family == 'Debian'

- name: tap nerd font
  homebrew_tap: 
    name: caskroom/fonts
    state: present
  when: ansible_os_family == 'Darwin'

- name: nerd font for debian
  git:
    repo: https://github.com/ryanoasis/nerd-fonts.git
    dest: ~/nerd-fonts
    force: yes
    depth: 1
  become_user: "{{ zsh_user }}"
  when: ansible_os_family == 'Debian'

- name: Install fonts for debian
  shell: "~/nerd-fonts/install.sh"
  become: yes
  become_user: "{{ zsh_user }}"
  when: ansible_os_family == 'Debian'

- name: Install Brew Casks
  homebrew_cask:
    name: font-hack-nerd-font
    state: present
  when: ansible_os_family == 'Darwin'

- name: create pyenv
  shell: "curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash"
  args:
    creates: ~/.pyenv
  become: yes
  become_user: "{{ zsh_user }}"

- name: Clone pyenv and pyenv virtualenvwrapper
  git:
    repo: https://github.com/pyenv/pyenv-virtualenvwrapper.git
    dest: "~/.pyenv/plugins/pyenv-virtualenvwrapper"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"


- name: Clone antigen {{ zsh_antigen_version }}
  git:
    repo: https://github.com/zsh-users/antigen.git
    dest: "{{ zsh_antigen_path }}/antigen"
    version: "{{ zsh_antigen_version }}"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  register: zsh_register_antigen_clone

- name: Clone iwfmp/mc-solarized-skin
  git:
    repo: https://github.com/iwfmp/mc-solarized-skin.git
    version: master
    dest: "~{{ zsh_user }}/.mc/lib/mc-solarized"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  when: zsh_mc_solarized_skin and not zsh_shared

- name: Check fzf installed
  command: which fzf
  changed_when: false
  failed_when: false
  register: zsh_register_fzf_command

- name: Download fzf
  unarchive:
    src: "{{ zsh_fzf_url }}"
    dest: /usr/local/bin
    remote_src: yes
    creates: /usr/local/bin/fzf
  become: yes
  when: zsh_register_fzf_command.rc == 1 and ansible_os_family == 'Debian'
  
- name: Set directory permissions
  file:
    name: "{{ zsh_antigen_path }}"
    owner: "{{ zsh_user }}"
    group: "{{ zsh_user_group }}"
    recurse: yes
  become: yes
  changed_when: false
